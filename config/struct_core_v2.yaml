%YAML:1.0

model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
distortion_parameters:
   k1: 0 # -2.9839715720358556e-01
   k2: 0 # 9.2224519780237782e-02
   p1: 0 # -1.1990340691497372e-04
   p2: 0 # -7.4597868882045419e-05
projection_parameters:
   fx: 4.59357e+02 
   fy: 4.59764e+02  
   cx: 3.32695e+02
   cy: 2.58998e+02

#common parameters  
imu_topic: "/imu"
image_topic: "/cam0/color"
dpt_img_topic: "/cam0/depth"
output_path: "/home/davidz/work/result"
# output_path: "/home/hzhang8/work/result"  

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix # Timu2c_1 Tu2c
   rows: 4
   cols: 4
   dt: d
   data: [0.00193013, -0.999997, 0.00115338, -0.00817048,
      -0.999996, -0.0019327, -0.00223606, 0.015075,
      0.00223829, -0.00114906, -0.999997, -0.0110795,
      0, 0, 0, 1]


# camera                     # IMU
#       /z                    | x
#      /                      |
#     /____x             y____|
#     |                       /
#     |                      /
#     | y                   / z

body_T_cam1: !!opencv-matrix # Timu2c_2, Tc1_2_c2 is a virtual transformation [I,t] t = [0.1, 0, 0], note "mbf" in estimator_dpt.cpp
   rows: 4
   cols: 4
   dt: d
   data: [0.00193013, -0.999997, 0.00115338, -0.007977467,
      -0.999996, -0.0019327, -0.00223606, -0.0849246,
      0.00223829, -0.00114906, -0.999997, -0.010855671,
      0, 0, 0, 1]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 2.0   # 1.0     # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04 # 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # 5.0 # 10.0 # keyframe selection threshold (pixel)

#imu parameters     The more accurate parameters you provide, the better performance
acc_n: 0.1 # 0.119 #0.1  #0.1        # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01 #0.0208 # 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001 # 0.000535 #0.001        # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.0001 # 0.000089 # 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81         # gravity magnitude

loop_closure: 0 # 1   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;

#unsynchronization parameters
estimate_td: 0 # 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 0 # 1                      # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033               # unit: s. rolling shutter read out time per frame (from data sheet). 

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/tony-ws1/output/pose_graph/" # save and load path
save_image: 0 #1        
